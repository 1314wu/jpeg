{
  "comments": [
    {
      "key": {
        "uuid": "0f5b09a7_e367a18a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1395734
      },
      "writtenOn": "2020-09-08T12:42:16Z",
      "side": 1,
      "message": "I have built this for Raspberry PI 4 64bits arch in yocto from Chromium. Running unit tests, it shows it fails in DJPEGTest.FloatProg3x2 with different MD5, but I could not verify if this is broken or if it is just an outdated md5 for that test and the target. All the other tests are successful, and apparently Chromium is running as expected in Poky dunfell in Weston.",
      "revId": "493a1e55925c47abe9808b7422c7872e8bbbc14f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "009ab4f2_616dc44c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2020-09-08T14:15:58Z",
      "side": 1,
      "message": "(Adding Chris and Leon to CC for visibility.)\n\nThanks for this - officially, Clang/LLVM is the only supported compiler for Chromium but since this is third_party/libjpeg_turbo, and we want our patches to make it into the upstream repo, we\u0027ll fix this.\n\nA couple of questions first though:\n1) What compiler options are you using with GCC 9 to see this failure - I\u0027d like to replicate this myself.\n2) Could you help me understand the bug linked to this patch? I\u0027m probably missing something but I can\u0027t see any libjpeg-turbo stuff in it.\n\nRegarding the unit test failure, that is fine (well... sort of) - GCC and Clang provide different floating-point output for the same C code. We don\u0027t really care that much here since we don\u0027t use that code in Chromium.",
      "revId": "493a1e55925c47abe9808b7422c7872e8bbbc14f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4666b2a7_9cd4fa6a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1395734
      },
      "writtenOn": "2020-09-08T15:43:04Z",
      "side": 1,
      "message": "Yes, I\u0027ve been sending GCC fixes as I find them, as we depend on GCC toolchain for the Chromium builds in webOS. GCC compatibility is not supported (so breaking GCC is not a reason for reverting a patch), but patches fixing GCC are accepted in all Chromium.\n\n1) GCC 9 build options:\naarch64-poky-linux-g++  -mcpu\u003dcortex-a72+crc+crypto -fstack-protector-strong  -D_FORTIFY_SOURCE\u003d2 -Wformat -Wformat-security -Werror\u003dformat-security ... -fno-strict-aliasing --param\u003dssp-buffer-size\u003d4 -fstack-protector -fno-unwind-tables -fno-asynchronous-unwind-tables -fPIC -pipe -pthread -Wall -Wno-unused-local-typedefs -Wno-maybe-uninitialized -Wno-deprecated-declarations -Wno-comments -Wno-packed-not-aligned -Wno-missing-field-initializers -Wno-unused-parameter -O2 -fno-ident -fdata-sections -ffunction-sections -fno-omit-frame-pointer -g1 -fvisibility\u003dhidden -std\u003dgnu++14 -Wno-narrowing -Wno-class-memaccess -fno-exceptions -fno-rtti -fvisibility-inlines-hidden\n\nThese are the relevant build flags, coming from https://github.com/lgsvl/meta-lgsvl-browser and poky Dunfell.\n\n2) Yes, that bug is an umbrella bug for all build issues breaking Chromium build for GCC. It is the one being used, unless the complexity of the problem requires a more detailed bug discussion.",
      "parentUuid": "009ab4f2_616dc44c",
      "revId": "493a1e55925c47abe9808b7422c7872e8bbbc14f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e2e7965_2031730c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2020-09-09T13:17:17Z",
      "side": 1,
      "message": "Thanks for the information. The only other comments I have are style nitpicks - we should be good when these are addressed.",
      "revId": "493a1e55925c47abe9808b7422c7872e8bbbc14f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "897daf5f_e8887794",
        "filename": "simd/arm/common/jidctfst-neon.c",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2020-09-09T13:17:17Z",
      "side": 1,
      "message": "Could you change these to:\n\nint64_t left_ac_bitmap \u003d vgetq_lane_s64(vreinterpretq_s64_s16(bitmap), 0);\nint64_t right_ac_bitmap \u003d vgetq_lane_s64(vreinterpretq_s64_s16(bitmap), 1);",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 88,
        "endChar": 90
      },
      "revId": "493a1e55925c47abe9808b7422c7872e8bbbc14f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4ad627c_b71c7dc3",
        "filename": "simd/arm/common/jidctfst-neon.c",
        "patchSetId": 1
      },
      "lineNbr": 409,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2020-09-09T13:17:17Z",
      "side": 1,
      "message": "We have a character limit of 80 - which makes things a bit messy. Could you put this all on one line and remove some of the whitespace before the \"vadd\" so it fits. E.g. \n\nuint8x16_t cols_01 \u003d vreinterpretq_u8_s8(\n        vaddq_s8(cols_01_s8, vreinterpretq_s8_u8(vdupq_n_u8(CENTERJSAMPLE))));",
      "range": {
        "startLine": 408,
        "startChar": 2,
        "endLine": 409,
        "endChar": 86
      },
      "revId": "493a1e55925c47abe9808b7422c7872e8bbbc14f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eae49e9c_8de6e5bc",
        "filename": "simd/arm/common/jidctfst-neon.c",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2020-09-09T13:17:17Z",
      "side": 1,
      "message": "Ditto for these.",
      "range": {
        "startLine": 411,
        "startChar": 1,
        "endLine": 418,
        "endChar": 86
      },
      "revId": "493a1e55925c47abe9808b7422c7872e8bbbc14f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9fe94e5d_c7d95edc",
        "filename": "simd/arm/common/jidctint-neon.c",
        "patchSetId": 1
      },
      "lineNbr": 633,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2020-09-09T13:17:17Z",
      "side": 1,
      "message": "Due to the 80 character per line limit, could you put these vdups on the next line under the vreinterprets?",
      "range": {
        "startLine": 633,
        "startChar": 65,
        "endLine": 633,
        "endChar": 91
      },
      "revId": "493a1e55925c47abe9808b7422c7872e8bbbc14f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec416e6c_2e5b6e2e",
        "filename": "simd/arm/common/jidctint-neon.c",
        "patchSetId": 1
      },
      "lineNbr": 725,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2020-09-09T13:17:17Z",
      "side": 1,
      "message": "Ditto",
      "range": {
        "startLine": 725,
        "startChar": 65,
        "endLine": 725,
        "endChar": 89
      },
      "revId": "493a1e55925c47abe9808b7422c7872e8bbbc14f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "162c025c_6418b3d7",
        "filename": "simd/arm/common/jidctred-neon.c",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2020-09-09T13:17:17Z",
      "side": 1,
      "message": "Could you change these to:\n\nint64_t left_ac_bitmap \u003d vgetq_lane_s64(vreinterpretq_s64_s16(bitmap), 0);\nint64_t right_ac_bitmap \u003d vgetq_lane_s64(vreinterpretq_s64_s16(bitmap), 1);",
      "range": {
        "startLine": 219,
        "startChar": 0,
        "endLine": 221,
        "endChar": 90
      },
      "revId": "493a1e55925c47abe9808b7422c7872e8bbbc14f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a78322e3_1734f33c",
        "filename": "simd/arm/common/jidctred-neon.c",
        "patchSetId": 1
      },
      "lineNbr": 456,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2020-09-09T13:17:17Z",
      "side": 1,
      "message": "To keep the upstream project\u0027s checkstyle happy, could you put this on the line below, aligned with the opening brace?",
      "range": {
        "startLine": 456,
        "startChar": 72,
        "endLine": 456,
        "endChar": 74
      },
      "revId": "493a1e55925c47abe9808b7422c7872e8bbbc14f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}