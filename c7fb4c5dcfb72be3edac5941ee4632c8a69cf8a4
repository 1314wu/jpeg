{
  "comments": [
    {
      "key": {
        "uuid": "341a7087_dde0baa8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2020-08-12T10:20:59Z",
      "side": 1,
      "message": "The more common h2v2 case. PTAL.",
      "revId": "c7fb4c5dcfb72be3edac5941ee4632c8a69cf8a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d02546f3_d1220a85",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2020-08-13T03:42:58Z",
      "side": 1,
      "message": "Possibly LGTM.\nJust a point of clarification for me.",
      "revId": "c7fb4c5dcfb72be3edac5941ee4632c8a69cf8a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56a29fb7_ef350ef9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2020-08-20T09:53:56Z",
      "side": 1,
      "message": "Hi Chris, are you OK with this explanation of the bias patterns?",
      "revId": "c7fb4c5dcfb72be3edac5941ee4632c8a69cf8a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01c70cbe_e5ad0dd1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2020-08-20T23:06:42Z",
      "side": 1,
      "message": "Oh. Yes.\nSorry. I had read this and then not commented.\n\nThank you for the explanation. It makes sense to me now.",
      "parentUuid": "56a29fb7_ef350ef9",
      "revId": "c7fb4c5dcfb72be3edac5941ee4632c8a69cf8a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e71bab92_992cf36e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2020-08-20T23:06:42Z",
      "side": 1,
      "message": "LGTM",
      "revId": "c7fb4c5dcfb72be3edac5941ee4632c8a69cf8a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3013dbb5_d8d2ffce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2020-08-21T09:02:08Z",
      "side": 1,
      "message": "Thanks!",
      "parentUuid": "e71bab92_992cf36e",
      "revId": "c7fb4c5dcfb72be3edac5941ee4632c8a69cf8a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5d04a42_de91f7b9",
        "filename": "simd/arm/common/jcsample-neon.c",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2020-08-13T03:42:58Z",
      "side": 1,
      "message": "IIUC the bias is:\n[[1,2]\n [0,0]]\n\nThe v1 had a bias of [0,1].\n\nI\u0027m not entirely sure I understand this. The v1 bias I took as just rounding up when doing the /2. Now we are doing a /4 so I see the sum of 3 still being a round-up. But why do we put extra bias in the top-right pixel?\n\nI am guessing because it saves an add and the vector register loaded with the other row\u0027s bias. Is that right? IE, otherwise it would be something like:\nrow0_samples \u003d vpadalq_u8(row0_bias, pixels_r0);\nrow1_samples \u003d vpadalq_u8(row1_bias, pixels_r1);\nsamples_u16 \u003d vpaddq_u16(row0_samples, row1_samples);\n\nIf so, this makes sense to me and is fine. We\u0027re arbitrarily choosing which pixels to bias anyway.",
      "range": {
        "startLine": 155,
        "startChar": 6,
        "endLine": 158,
        "endChar": 55
      },
      "revId": "c7fb4c5dcfb72be3edac5941ee4632c8a69cf8a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef474d5f_fb9f1593",
        "filename": "simd/arm/common/jcsample-neon.c",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2020-08-13T13:51:40Z",
      "side": 1,
      "message": "So the idea behind the bias is to apply a dither pattern - round output sample values, that end in 0.5 after the division, up or down every other pixel. The idea is the same for h2v1 downsampling and h2v2 downsampling.\n\n(The following is certainly at rick of being a bit verbose...)\n\nFor h2v1 downsampling, output sample values (ending in 0.5) would be rounded down with a bias value of 0, and rounded up with a bias value of 1. Given we\u0027re dividing by 2, the bias is a contribution of 0.5.\n\nFor h2v2 downsampling, output sample values (ending in 0.5) would be rounded down with a bias value of 1, and rounded up with a bias value of 2. Given we\u0027re dividing by 4 here, the bias values 1 and 2 are contributing 0.25 and 0.5 respectively.\n\nEnumerating the possible fractional values and adding the different biases for h2v2:\n\nIf we\u0027re adding 1:\n0.0  -\u003e 0.25 (round down)\n0.25 -\u003e 0.5  (round down - remember we\u0027re using truncating - not rounding - right shifts)\n0.5  -\u003e 0.75 (round down - same reasoning as above)\n0.75 -\u003e 1.0  (round up)\n\nIf we\u0027re adding 2:\n0.0  -\u003e 0.5  (round down)\n0.25 -\u003e 0.75 (round down)\n0.5  -\u003e 1.0  (round up)\n0.75 -\u003e 1.25 (round up)\n\nThus an alternating bias of {1,2,1,2,1,2, ...} ensures output sample values ending in 0.5 are rounded up/down at alternate pixel locations.",
      "parentUuid": "e5d04a42_de91f7b9",
      "range": {
        "startLine": 155,
        "startChar": 6,
        "endLine": 158,
        "endChar": 55
      },
      "revId": "c7fb4c5dcfb72be3edac5941ee4632c8a69cf8a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22b9a488_ca87a70a",
        "filename": "simd/arm/common/jcsample-neon.c",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2020-08-20T23:06:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ef474d5f_fb9f1593",
      "range": {
        "startLine": 155,
        "startChar": 6,
        "endLine": 158,
        "endChar": 55
      },
      "revId": "c7fb4c5dcfb72be3edac5941ee4632c8a69cf8a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}